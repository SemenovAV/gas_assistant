# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build

on:
  pull_request:
    branches: [ main ]
jobs:
  build:

    runs-on: ubuntu-latest
    env:
      SECRET_KEY: secret.SECRET_KEY

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.8.6
    - name: install pipenv
      run: |
        sudo apt-get install libpq-dev -y
        python -m pip install --upgrade pip
        pip install pipenv

    - name: Install dependencies
      run: |
        pipenv install --skip-lock --dev
        pipenv lock --pre

        pipenv run pre-commit install --hook-type commit-msg

    - name: migrate
      run: pipenv run python manage.py migrate

    - name: lint
      run: pipenv run pre-commit run flake8 -a

    - name: Test with pytest
      run: |
        pipenv run coverage run --source='.' -m pytest --suppress-no-test-exit-code
        
  bump-version:
    needs: [ build ]
    if: "!startsWith(github.event.head_commit.message, 'bump:')"
    runs-on: ubuntu-latest
    name: "Bump version and create changelog with commitizen"
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          token: '${{ secrets.GITHUB_TOKEN}}'
          fetch-depth: 0
      - name: Create bump and changelog
        uses: commitizen-tools/commitizen-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: 'main'

